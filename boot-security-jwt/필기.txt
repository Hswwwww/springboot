Spring Security + JWT
- JWT 기반 > 인증 + 허가 구현
- REST API
- 나머지 동일

분산 서버 환경에서 처음 접속했던 서버 메모리에 있는 세션 공유가 안되는 문제점을 해결하고자 나온 방법

로그인 성공시 토큰 만듦, 로그인 정보를 클라이언트에게 돌려주고 끊음 > 서버에는 사용자의 정보가 없음
다른 서버 접속 시 클라이언트가 가지고 있는 토큰 검증 후 서버 이용 가능

쿠키 같은 느낌



프로젝트 생성
- Generators: Spring Boot
- Name: "boot-security-jwt"
- Language: Java
- Type: Gradle - Groovy
- Group: "com.test"
- Artifact: "boot-jwt"
- Package name: "com.test.jwt"
- JDK: 17
- Java: 17
- Packaging: Jar
- Dependencies:
	- Spring Web
	- Oracle Driver
	- Spring Data JPA
	- Lombok
	- Thymeleaf
	- DevTools
	- Spring Security

데이터베이스 주석
- build.gradle

JWT 의존성 추가
- build.gradle


페이지
- "com.test.jwt.controller" > "MainController.java"
- "com.test.jwt.controller" > "AdminController.java"
- "com.test.jwt.controller" > "MemberController.java"



시큐리티 설정 파일
- "com.test.jwt.config" > "SecurityConfig.java"

- 회원 설정
- "com.test.jwt.entity" > "Member.java"
- "com.test.jwt.repository" > "MemberRepository.java"(I)


회원 가입
- MemberController.java
- "com.test.jwt.service" > "MemberService.java"
- "com.test.jwt.dto" > "MemberDTO.java"

로그인
- "com.test.jwt.auth" > "LoginFilter.java"



DB 기반 + 로그인 연동
- com.test.jwt.repository >  MemberRepository.java > 메서드 추가
- com.test.jwt.service > "CustomUserDetailsService.java"
- com.test.jwt.dto > "CustomUserDetails.java"


JWT 발급
- 로그인 > 성공 > JWT 발급
- com.test.jwt.auth > "JWTUtil.java"

JWT 검증
- com.test.jwt.auth > "JWTFilter.java"



























